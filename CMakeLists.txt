CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )
PROJECT( OpenGLBoilerplate )

IF( WIN32 )
    SET( GL_LIBS_HOME "C:/lib" CACHE PATH "Location of support libraries" )

    SET( GLFW3_ROOT "${GL_LIBS_HOME}/glfw-3.1.2.bin.WIN32" CACHE STRING "GLFW3 root" )
    SET( GLEW_ROOT "${GL_LIBS_HOME}/glew" CACHE STRING "GLEW root" )

    INCLUDE_DIRECTORIES( "${GLEW_ROOT}/include" )
    LINK_DIRECTORIES   ( "${GLEW_ROOT}/lib" )
    #ADD_DEFINITIONS( -DGLEW_STATIC )

    INCLUDE_DIRECTORIES( "${GLFW3_ROOT}/include" )
    LINK_DIRECTORIES   ( "${GLFW3_ROOT}/lib-vc2015" )
    SET( FRAMEWORK_LIBS glfw3.lib )

    SET( PLATFORM_LIBS ${FRAMEWORK_LIBS} opengl32 ) #glew32.lib )
ELSEIF( APPLE )
    INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
    FIND_LIBRARY(COCOA_LIBRARY Cocoa)
    FIND_LIBRARY(IOKIT_LIBRARY IOKit)
    FIND_LIBRARY(COREVIDEO_LIBRARY CoreVideo)
    FIND_LIBRARY(OpenGL_LIBRARY OpenGL )
    MARK_AS_ADVANCED (COCOA_LIBRARY
                      IOKIT_LIBRARY
                      OpenGL_LIBRARY)
    
    INCLUDE_DIRECTORIES( "/opt/local/include" )
    LINK_DIRECTORIES   ( "/opt/local/lib" )

    SET( FRAMEWORK_LIBS glfw3 )

    SET(PLATFORM_LIBS ${FRAMEWORK_LIBS} ${COCOA_LIBRARY} ${IOKIT_LIBRARY} ${COREVIDEO_LIBRARY} ${GLUT_LIBRARY} ${OpenGL_LIBRARY} -lGLEW)
ELSEIF( UNIX )
    FIND_PACKAGE( OpenGL REQUIRED )
    INCLUDE_DIRECTORIES( ${OPENGL_INCLUDE_DIRS} )

    LINK_DIRECTORIES   ( "/usr/local/lib" )
    SET( FRAMEWORK_LIBS glfw )

    SET( PLATFORM_LIBS ${FRAMEWORK_LIBS} X11 GL ${OPENGL_LIBRARIES} ${GLFW_LIBRARIES})
ENDIF()

ADD_EXECUTABLE( ${PROJECT_NAME} src/glfw3_boilerplate.cpp )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} ${PLATFORM_LIBS} )
